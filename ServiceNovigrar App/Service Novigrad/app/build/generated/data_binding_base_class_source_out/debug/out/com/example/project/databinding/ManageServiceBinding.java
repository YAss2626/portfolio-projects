// Generated by view binder compiler. Do not edit!
package com.example.project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.project.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ManageServiceBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button buttonAddDocument;

  @NonNull
  public final Button buttonAddFormField;

  @NonNull
  public final Button buttonCreateServiceType;

  @NonNull
  public final EditText editTextServiceName;

  @NonNull
  public final LinearLayout linearLayoutDocuments;

  @NonNull
  public final LinearLayout linearLayoutFormFields;

  private ManageServiceBinding(@NonNull ScrollView rootView, @NonNull Button buttonAddDocument,
      @NonNull Button buttonAddFormField, @NonNull Button buttonCreateServiceType,
      @NonNull EditText editTextServiceName, @NonNull LinearLayout linearLayoutDocuments,
      @NonNull LinearLayout linearLayoutFormFields) {
    this.rootView = rootView;
    this.buttonAddDocument = buttonAddDocument;
    this.buttonAddFormField = buttonAddFormField;
    this.buttonCreateServiceType = buttonCreateServiceType;
    this.editTextServiceName = editTextServiceName;
    this.linearLayoutDocuments = linearLayoutDocuments;
    this.linearLayoutFormFields = linearLayoutFormFields;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ManageServiceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ManageServiceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.manage_service, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ManageServiceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonAddDocument;
      Button buttonAddDocument = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddDocument == null) {
        break missingId;
      }

      id = R.id.buttonAddFormField;
      Button buttonAddFormField = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddFormField == null) {
        break missingId;
      }

      id = R.id.buttonCreateServiceType;
      Button buttonCreateServiceType = ViewBindings.findChildViewById(rootView, id);
      if (buttonCreateServiceType == null) {
        break missingId;
      }

      id = R.id.editTextServiceName;
      EditText editTextServiceName = ViewBindings.findChildViewById(rootView, id);
      if (editTextServiceName == null) {
        break missingId;
      }

      id = R.id.linearLayoutDocuments;
      LinearLayout linearLayoutDocuments = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutDocuments == null) {
        break missingId;
      }

      id = R.id.linearLayoutFormFields;
      LinearLayout linearLayoutFormFields = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutFormFields == null) {
        break missingId;
      }

      return new ManageServiceBinding((ScrollView) rootView, buttonAddDocument, buttonAddFormField,
          buttonCreateServiceType, editTextServiceName, linearLayoutDocuments,
          linearLayoutFormFields);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
