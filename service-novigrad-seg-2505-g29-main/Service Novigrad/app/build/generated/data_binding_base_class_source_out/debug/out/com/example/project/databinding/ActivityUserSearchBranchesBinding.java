// Generated by view binder compiler. Do not edit!
package com.example.project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.project.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUserSearchBranchesBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnSearchByAdresse;

  @NonNull
  public final Button btnSearchByHours;

  @NonNull
  public final Button btnSearchByServices;

  @NonNull
  public final Button btnViewAllBranches;

  @NonNull
  public final TextView txtTitle;

  @NonNull
  public final TextView txtWelcome;

  private ActivityUserSearchBranchesBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnSearchByAdresse, @NonNull Button btnSearchByHours,
      @NonNull Button btnSearchByServices, @NonNull Button btnViewAllBranches,
      @NonNull TextView txtTitle, @NonNull TextView txtWelcome) {
    this.rootView = rootView;
    this.btnSearchByAdresse = btnSearchByAdresse;
    this.btnSearchByHours = btnSearchByHours;
    this.btnSearchByServices = btnSearchByServices;
    this.btnViewAllBranches = btnViewAllBranches;
    this.txtTitle = txtTitle;
    this.txtWelcome = txtWelcome;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUserSearchBranchesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUserSearchBranchesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_user_search_branches, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUserSearchBranchesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSearchByAdresse;
      Button btnSearchByAdresse = ViewBindings.findChildViewById(rootView, id);
      if (btnSearchByAdresse == null) {
        break missingId;
      }

      id = R.id.btnSearchByHours;
      Button btnSearchByHours = ViewBindings.findChildViewById(rootView, id);
      if (btnSearchByHours == null) {
        break missingId;
      }

      id = R.id.btnSearchByServices;
      Button btnSearchByServices = ViewBindings.findChildViewById(rootView, id);
      if (btnSearchByServices == null) {
        break missingId;
      }

      id = R.id.btnViewAllBranches;
      Button btnViewAllBranches = ViewBindings.findChildViewById(rootView, id);
      if (btnViewAllBranches == null) {
        break missingId;
      }

      id = R.id.txtTitle;
      TextView txtTitle = ViewBindings.findChildViewById(rootView, id);
      if (txtTitle == null) {
        break missingId;
      }

      id = R.id.txtWelcome;
      TextView txtWelcome = ViewBindings.findChildViewById(rootView, id);
      if (txtWelcome == null) {
        break missingId;
      }

      return new ActivityUserSearchBranchesBinding((ConstraintLayout) rootView, btnSearchByAdresse,
          btnSearchByHours, btnSearchByServices, btnViewAllBranches, txtTitle, txtWelcome);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
